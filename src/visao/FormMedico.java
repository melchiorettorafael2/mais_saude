/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;

import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import javax.swing.UIManager.LookAndFeelInfo;
import javax.swing.UnsupportedLookAndFeelException;
import modeloConnection.conexaoBD;
import modeloDao.DaoMedico;
import modeloBeans.BeansMedico;
import modeloBeans.ModeloTabela;

/**
 *
 * @author rafa
 */
public class FormMedico extends javax.swing.JFrame {

    BeansMedico mod = new BeansMedico();
    DaoMedico control = new DaoMedico();
    conexaoBD conex = new conexaoBD();
    int flag = 0;
    
    
    public FormMedico() {
        initComponents();
        preencherTabela("select *from medicos order by nome_medico");//chama o método preencherTabela.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComboBoxEspecializacao = new javax.swing.JComboBox<>();
        jFormattedTextFieldCRM = new javax.swing.JTextField();
        jButtonNovo = new javax.swing.JButton();
        jButtonSalvar = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();
        jButtonEditar = new javax.swing.JButton();
        jButtonExcluir = new javax.swing.JButton();
        jTextFieldPesquisa = new javax.swing.JTextField();
        jButtonPesquisar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableMedico = new javax.swing.JTable();
        jButtonAddImage = new javax.swing.JButton();
        jLabeImage = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jtCOD = new javax.swing.JTextField();
        jTextFieldNome = new javax.swing.JTextField();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Médicos");
        setIconImage(Toolkit.getDefaultToolkit().getImage("C:/Sistema_Mais_Saude/icone3.png"));
        setResizable(false);
        getContentPane().setLayout(null);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cadastro de Médicos", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 18)), "", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 18))); // NOI18N
        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setText("Nome");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(160, 60, 44, 30);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel2.setText("CRM");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(160, 120, 50, 30);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel3.setText("Especialidade");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(340, 120, 97, 30);

        jComboBoxEspecializacao.setFont(jComboBoxEspecializacao.getFont().deriveFont(jComboBoxEspecializacao.getFont().getStyle() & ~java.awt.Font.BOLD, 14));
        jComboBoxEspecializacao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cardiologista", "Cirurgião", "Clínico", "Geriatra", "Ginecologista", "Neurologista", "Obstetra", "Oftalmologista", "Ortopedista", "Otorrinolaringologista", "Pediatra", "Proctologista", "Psquiatra" }));
        jComboBoxEspecializacao.setSelectedItem(null);
        jComboBoxEspecializacao.setEnabled(false);
        jComboBoxEspecializacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxEspecializacaoActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBoxEspecializacao);
        jComboBoxEspecializacao.setBounds(440, 120, 120, 30);

        jFormattedTextFieldCRM.setFont(jFormattedTextFieldCRM.getFont().deriveFont(jFormattedTextFieldCRM.getFont().getStyle() & ~java.awt.Font.BOLD, 14));
        jFormattedTextFieldCRM.setEnabled(false);
        jFormattedTextFieldCRM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextFieldCRMActionPerformed(evt);
            }
        });
        jPanel1.add(jFormattedTextFieldCRM);
        jFormattedTextFieldCRM.setBounds(210, 120, 100, 30);

        jButtonNovo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButtonNovo.setText("Novo");
        jButtonNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNovoActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonNovo);
        jButtonNovo.setBounds(20, 190, 90, 35);

        jButtonSalvar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButtonSalvar.setText("Salvar");
        jButtonSalvar.setEnabled(false);
        jButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonSalvar);
        jButtonSalvar.setBounds(20, 230, 90, 35);

        jButtonCancelar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.setEnabled(false);
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonCancelar);
        jButtonCancelar.setBounds(20, 270, 90, 35);

        jButtonEditar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButtonEditar.setText("Editar");
        jButtonEditar.setEnabled(false);
        jButtonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditarActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonEditar);
        jButtonEditar.setBounds(20, 310, 90, 35);

        jButtonExcluir.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButtonExcluir.setText("Excluir");
        jButtonExcluir.setEnabled(false);
        jButtonExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonExcluir);
        jButtonExcluir.setBounds(20, 350, 90, 35);

        jTextFieldPesquisa.setFont(jTextFieldPesquisa.getFont().deriveFont(jTextFieldPesquisa.getFont().getStyle() & ~java.awt.Font.BOLD, 14));
        jPanel1.add(jTextFieldPesquisa);
        jTextFieldPesquisa.setBounds(140, 190, 240, 30);

        jButtonPesquisar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButtonPesquisar.setText("Pesquisar");
        jButtonPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPesquisarActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonPesquisar);
        jButtonPesquisar.setBounds(390, 190, 100, 33);

        jTableMedico.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTableMedico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableMedico.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMedicoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableMedico);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(140, 230, 450, 160);

        jButtonAddImage.setForeground(new java.awt.Color(255, 255, 255));
        jButtonAddImage.setToolTipText("Click para Add Foto");
        jButtonAddImage.setBorder(null);
        jButtonAddImage.setBorderPainted(false);
        jButtonAddImage.setContentAreaFilled(false);
        jButtonAddImage.setEnabled(false);
        jButtonAddImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddImageActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonAddImage);
        jButtonAddImage.setBounds(20, 30, 120, 130);

        jLabeImage.setBackground(new java.awt.Color(255, 255, 255));
        jLabeImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabeImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/profile_icon.png"))); // NOI18N
        jLabeImage.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabeImage.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                jLabeImageComponentAdded(evt);
            }
        });
        jPanel1.add(jLabeImage);
        jLabeImage.setBounds(20, 30, 120, 130);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel4.setText("ID");
        jLabel4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.add(jLabel4);
        jLabel4.setBounds(460, 60, 30, 30);

        jtCOD.setFont(jtCOD.getFont().deriveFont(jtCOD.getFont().getStyle() & ~java.awt.Font.BOLD, 14));
        jtCOD.setEnabled(false);
        jtCOD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtCODActionPerformed(evt);
            }
        });
        jPanel1.add(jtCOD);
        jtCOD.setBounds(490, 60, 60, 30);

        jTextFieldNome.setEnabled(false);
        jTextFieldNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNomeActionPerformed(evt);
            }
        });
        jPanel1.add(jTextFieldNome);
        jTextFieldNome.setBounds(210, 60, 220, 30);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(10, 10, 640, 440);

        setSize(new java.awt.Dimension(668, 493));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
         jTextFieldNome.setEnabled(!true);
      jFormattedTextFieldCRM.setEnabled(!true);
      jComboBoxEspecializacao.setEnabled(!true);
      jButtonSalvar.setEnabled(!true);
       jLabeImage.setEnabled(!true);
        jButtonAddImage.setEnabled(!true);
        jButtonCancelar.setEnabled(!true);
        jButtonNovo.setEnabled(true);
        jButtonEditar.setEnabled(false);
        jButtonExcluir.setEnabled(false);
        jTextFieldPesquisa.setEnabled(true);
        jButtonPesquisar.setEnabled(true);
        jtCOD.setText("");
         jTextFieldNome.setText("");
         jFormattedTextFieldCRM.setText(""); 
        
        
        
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void jButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarActionPerformed
      
      if (jTextFieldNome.getText().isEmpty()){
          JOptionPane.showMessageDialog(null,"Preencha o Campo Nome para Continuar!");
          jTextFieldNome.requestFocus();
      }else if(jFormattedTextFieldCRM.getText().isEmpty()){
       JOptionPane.showMessageDialog(null,"Preencha o Campo CRM para Continuar!");
          jFormattedTextFieldCRM.requestFocus();
      }else
      if (flag==1){ 
      mod.setNome(jTextFieldNome.getText());
      mod.setEspecialidade((String) jComboBoxEspecializacao.getSelectedItem());
      mod.setCrm(Integer.parseInt(jFormattedTextFieldCRM.getText()));
      mod.setFotoPerfil((String) jLabeImage.getText());
      control.Salvar(mod);
      jTextFieldNome.setText("");
      jFormattedTextFieldCRM.setText("");
     // jComboBoxEspecializacao.setModel(new DefaultComboBoxModel());
      jTextFieldNome.setEnabled(false);
      jFormattedTextFieldCRM.setEnabled(false);
      jComboBoxEspecializacao.setEnabled(false);
      jButtonSalvar.setEnabled(false);
      jButtonCancelar.setEnabled(false);
       preencherTabela("select *from medicos order by nome_medico");
       }else{
          mod.setCodigo(Integer.parseInt(jtCOD.getText()));
          mod.setNome(jTextFieldNome.getText());
          mod.setEspecialidade((String)jComboBoxEspecializacao.getSelectedItem());
          mod.setCrm(Integer.parseInt(jFormattedTextFieldCRM.getText()));
          control.Editar(mod);
          jtCOD.setText("");
          jTextFieldNome.setText("");
          jFormattedTextFieldCRM.setText(""); 
          jTextFieldNome.setEnabled(false);
          jFormattedTextFieldCRM.setEnabled(false);
          jComboBoxEspecializacao.setEnabled(false);
          jButtonSalvar.setEnabled(false);  
          jButtonNovo.setEnabled(true);
          jButtonCancelar.setEnabled(false);
           preencherTabela("select *from medicos order by nome_medico");
          
       }
    }//GEN-LAST:event_jButtonSalvarActionPerformed

    private void jLabeImageComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_jLabeImageComponentAdded

    }//GEN-LAST:event_jLabeImageComponentAdded

    private void jFormattedTextFieldCRMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextFieldCRMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFormattedTextFieldCRMActionPerformed

    private void jButtonAddImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddImageActionPerformed
        JFileChooser arquivo = new JFileChooser();
        arquivo.setDialogTitle("Selecione uma foto");
        arquivo.setFileSelectionMode(JFileChooser.FILES_ONLY);
        
            int opt = arquivo.showOpenDialog(this);
            if (opt == JFileChooser.APPROVE_OPTION){
                File file = new File("Caminho");
                file = arquivo.getSelectedFile(); //Recebe O Caminho.
                
                ImageIcon imagem = new ImageIcon(arquivo.getSelectedFile().getPath());
                jLabeImage.setIcon(new ImageIcon(imagem.getImage().getScaledInstance(jLabeImage.getWidth(),jLabeImage.getHeight(), Image.SCALE_DEFAULT)));
                
                
            }
    }//GEN-LAST:event_jButtonAddImageActionPerformed

    private void jButtonPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPesquisarActionPerformed
        //ação para buscar médico através do botão pesquisar
        mod.setPesquisa(jTextFieldPesquisa.getText());// Atributo pesquisa insere dentro do método de pesquisa o que o usuário digitou.
        BeansMedico model = control.buscaMedico(mod);// Chama o método buscaMedico.
        /*Função que envia o modelo (setPesquisa) e chamando o método (buscaMedico) enviando
        *por parâmetro (mod) o que o usuário digitou. 
        */
        jtCOD.setText(String.valueOf(model.getCodigo()));
        jTextFieldNome.setText(model.getNome());//Campo nome recebe o nome encontrado no banco.
        jFormattedTextFieldCRM.setText(String.valueOf(model.getCrm()));//Transforma o inteiro em String.
        jComboBoxEspecializacao.setSelectedItem(model.getEspecialidade());
        preencherTabela("select *from medicos where nome_medico like'%"+mod.getPesquisa()+"%'");
        
    }//GEN-LAST:event_jButtonPesquisarActionPerformed

    private void jButtonNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNovoActionPerformed
      flag=1;  
      jTextFieldNome.setEnabled(true);
      jFormattedTextFieldCRM.setEnabled(true);
      jComboBoxEspecializacao.setEnabled(true);
      jButtonSalvar.setEnabled(true);
       jLabeImage.setEnabled(true);
        jButtonAddImage.setEnabled(true);
        jButtonCancelar.setEnabled(true);
        jTextFieldNome.setText("");
        jFormattedTextFieldCRM.setText("");
        jTextFieldPesquisa.setText("");
        jComboBoxEspecializacao.setSelectedItem(null);
        jButtonEditar.setEnabled(false);
        jButtonExcluir.setEnabled(false);
        jTextFieldPesquisa.setEnabled(false);
       jButtonPesquisar.setEnabled(false);
       jtCOD.setText("");
    }//GEN-LAST:event_jButtonNovoActionPerformed

    private void jButtonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditarActionPerformed
      flag=2;
      jTextFieldNome.setEnabled(true);
      jFormattedTextFieldCRM.setEnabled(true);
      jComboBoxEspecializacao.setEnabled(true);
      jButtonSalvar.setEnabled(true);
       jLabeImage.setEnabled(true);
        jButtonAddImage.setEnabled(true);
        jButtonCancelar.setEnabled(true);
        jButtonEditar.setEnabled(false);
        jButtonNovo.setEnabled(false);
        jButtonExcluir.setEnabled(false);
        preencherTabela("select *from medicos order by nome_medico");
    }//GEN-LAST:event_jButtonEditarActionPerformed

    private void jButtonExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirActionPerformed
        int resposta =0;
        resposta =JOptionPane.showConfirmDialog(rootPane,"Deseja Realmente Excluir o Médico?");
        if(resposta==JOptionPane.YES_OPTION){
        mod.setCodigo(Integer.parseInt(jtCOD.getText()));
        control.Excluir(mod);
         jtCOD.setText("");
          jTextFieldNome.setText("");
          jFormattedTextFieldCRM.setText(""); 
          jtCOD.setText("");
          jComboBoxEspecializacao.setSelectedItem(null);
          jTextFieldNome.setEnabled(false);
          jFormattedTextFieldCRM.setEnabled(false);
          jComboBoxEspecializacao.setEnabled(false);
          jButtonSalvar.setEnabled(false);  
          jButtonNovo.setEnabled(true);
          jButtonCancelar.setEnabled(false);
          jButtonEditar.setEnabled(false);
          jButtonExcluir.setEnabled(false);
           preencherTabela("select *from medicos order by nome_medico");
        }
    }//GEN-LAST:event_jButtonExcluirActionPerformed

    private void jTableMedicoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMedicoMouseClicked
        String nome_medico=""+jTableMedico.getValueAt(jTableMedico.getSelectedRow(),1);
        conex.conexao();
        conex.executaSql("select *from medicos where nome_medico='"+nome_medico+"'");
        try {
            conex.rs.first();
            jtCOD.setText(String.valueOf(conex.rs.getInt("cod_medico")));
            jTextFieldNome.setText(conex.rs.getString("nome_medico"));
            jComboBoxEspecializacao.setSelectedItem(conex.rs.getString("especialidade_medico"));
            jFormattedTextFieldCRM.setText(conex.rs.getString("crm_medico"));
            jButtonEditar.setEnabled(true);
            jButtonExcluir.setEnabled(true);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Erro ao Selecionar os Dados!\n"+ex.getMessage());
            
        }
        conex.desconecta();
    }//GEN-LAST:event_jTableMedicoMouseClicked

    private void jComboBoxEspecializacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxEspecializacaoActionPerformed

    }//GEN-LAST:event_jComboBoxEspecializacaoActionPerformed

    private void jtCODActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtCODActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtCODActionPerformed

    private void jTextFieldNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNomeActionPerformed
    
    public void preencherTabela(String Sql){
        ArrayList dados = new ArrayList();
        String [] colunas = new String []{"ID", "Nome", "Especialidade", "CRM"};
        conex.conexao();
        conex.executaSql(Sql);
        try{
            conex.rs.first();
        
            do{
                dados.add(new Object[]{conex.rs.getInt("cod_medico"), conex.rs.getString("nome_medico"),conex.rs.getString("especialidade_medico"), conex.rs.getInt("crm_medico")});
            }while(conex.rs.next());//Enquanto houver dados ele vai percorrer o registro.
        }catch (SQLException ex){
            //JOptionPane.showMessageDialog(rootPane,"Erro ao Preencher ArrayList\n"+ex.getMessage());   
        }
        ModeloTabela modelo = new ModeloTabela(dados, colunas) {};
        
        jTableMedico.setModel(modelo);
        jTableMedico.getColumnModel().getColumn(0).setPreferredWidth(35);
        jTableMedico.getColumnModel().getColumn(0).setResizable(false);
        jTableMedico.getColumnModel().getColumn(1).setPreferredWidth(210);
        jTableMedico.getColumnModel().getColumn(1).setResizable(false);
        jTableMedico.getColumnModel().getColumn(2).setPreferredWidth(100);
        jTableMedico.getColumnModel().getColumn(2).setResizable(false);
        jTableMedico.getColumnModel().getColumn(3).setPreferredWidth(101);
        jTableMedico.getColumnModel().getColumn(3).setResizable(false);
        jTableMedico.getTableHeader().setReorderingAllowed(false);
        jTableMedico.setAutoResizeMode(jTableMedico.AUTO_RESIZE_OFF);// Bloqueia Tabela para redimensionamento.
        jTableMedico.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);// Usuário só pode selecionar um campo da tabela por vez.
        conex.desconecta();
    }
   
    public static void main(String args[]){

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormMedico().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddImage;
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonEditar;
    private javax.swing.JButton jButtonExcluir;
    private javax.swing.JButton jButtonNovo;
    private javax.swing.JButton jButtonPesquisar;
    private javax.swing.JButton jButtonSalvar;
    private javax.swing.JComboBox<String> jComboBoxEspecializacao;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JTextField jFormattedTextFieldCRM;
    private javax.swing.JLabel jLabeImage;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableMedico;
    private javax.swing.JTextField jTextFieldNome;
    private javax.swing.JTextField jTextFieldPesquisa;
    private javax.swing.JTextField jtCOD;
    // End of variables declaration//GEN-END:variables


    
}
