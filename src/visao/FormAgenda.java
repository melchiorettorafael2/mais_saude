/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;
import java.awt.Toolkit;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import modeloBeans.BeansAgenda;
import modeloBeans.ModeloTabela;
import modeloConnection.conexaoBD;
import modeloDao.DaoAgenda;
import modeloBeans.BeansConsulta;
import modeloDao.DaoConsulta;
/**
 *
 * @author rafa
 */
public class FormAgenda extends javax.swing.JFrame {
    conexaoBD conex = new conexaoBD();
    BeansAgenda agenda = new BeansAgenda();
    BeansAgenda agen = new BeansAgenda();
    DaoAgenda daoagenda = new DaoAgenda();
     String dtHoje;
     String status;
    
    /**
     * Creates new form FormAgenda
     */
    public FormAgenda() {
        
        initComponents();
        
        Calendar data = Calendar.getInstance();
        Date d = data.getTime();
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
        dateFormat.format (d);

       
        dtHoje = dateFormat.format(d);
        
        status ="Aberto";
        
        try {
          preencherTabela("select *from agenda inner join pacientes on agenda_codpac = rg_paci inner join medicos on agenda_codmedico = cod_medico where agenda_data='"+dtHoje+"' and agenda_status='"+status+"' order by agenda_turno");

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane,"Erro ao Preencher Tabela"+ex);
        }
       
        
      
    }
    
     public void preencherTabela(String Sql){
        ArrayList dados = new ArrayList();
        String [] colunas = new String []{"ID", "Nome", "Horário", "Data", "Status", "Médico"};
        conex.conexao();
        conex.executaSql(Sql);
        try{
            conex.rs.first();
        
            do{
                dados.add(new Object[]{conex.rs.getString("agenda_cod"), conex.rs.getString("nome_paci"),conex.rs.getString("agenda_turno"), conex.rs.getString("agenda_data"), conex.rs.getString("agenda_status"), conex.rs.getString("nome_medico")});
            }while(conex.rs.next());//Enquanto houver dados ele vai percorrer o registro.
        }catch (SQLException ex){
            
            /*JOptionPane.showMessageDialog(rootPane,"Não existem agendamentos marcados para hoje!");*/
        }
        ModeloTabela modelo = new ModeloTabela(dados, colunas) {};
        
        jTableAgenda.setModel(modelo);
        jTableAgenda.getColumnModel().getColumn(0).setPreferredWidth(30);
        jTableAgenda.getColumnModel().getColumn(0).setResizable(false);
        jTableAgenda.getColumnModel().getColumn(1).setPreferredWidth(220);
        jTableAgenda.getColumnModel().getColumn(1).setResizable(false);
        jTableAgenda.getColumnModel().getColumn(2).setPreferredWidth(80);
        jTableAgenda.getColumnModel().getColumn(2).setResizable(false);
        jTableAgenda.getColumnModel().getColumn(3).setPreferredWidth(80);
        jTableAgenda.getColumnModel().getColumn(3).setResizable(false);
         jTableAgenda.getColumnModel().getColumn(4).setPreferredWidth(120);
        jTableAgenda.getColumnModel().getColumn(4).setResizable(false);
         jTableAgenda.getColumnModel().getColumn(5).setPreferredWidth(120);
        jTableAgenda.getColumnModel().getColumn(5).setResizable(false);
        jTableAgenda.getTableHeader().setReorderingAllowed(false);
        jTableAgenda.setAutoResizeMode(jTableAgenda.AUTO_RESIZE_OFF);// Bloqueia Tabela para redimensionamento.
        jTableAgenda.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);// Usuário só pode selecionar um campo da tabela por vez.
        
         

       
    }
     
          
         
        

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableAgenda = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButtonAtender = new javax.swing.JButton();
        jButtonRefresh = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Agenda");
        setIconImage(Toolkit.getDefaultToolkit().getImage("C:/Sistema_Mais_Saude/icone3.png"));
        setResizable(false);
        getContentPane().setLayout(null);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Agenda", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 18))); // NOI18N
        jPanel1.setLayout(null);

        jTableAgenda.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTableAgenda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableAgenda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableAgendaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableAgenda);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(20, 60, 570, 300);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel1.setText("Consultas");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(30, 40, 73, 19);

        jButtonAtender.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButtonAtender.setText("Atender Consulta");
        jButtonAtender.setEnabled(false);
        jButtonAtender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAtenderActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonAtender);
        jButtonAtender.setBounds(240, 370, 150, 40);

        jButtonRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/refresh.png"))); // NOI18N
        jButtonRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRefreshActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonRefresh);
        jButtonRefresh.setBounds(560, 20, 30, 30);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(10, 10, 630, 430);

        setSize(new java.awt.Dimension(656, 481));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTableAgendaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableAgendaMouseClicked

        String agenda_cod=""+jTableAgenda.getValueAt(jTableAgenda.getSelectedRow(),0);
        conex.conexao();
        conex.executaSql("select *from agenda where agenda_cod='"+agenda_cod+"'");
        try {
            conex.rs.first();
            agen.setStatus("Em Atendimento");
            agen.setAgendaCod(conex.rs.getInt("agenda_cod"));
            jButtonAtender.setEnabled(true);
         
          
         /*JOptionPane.showMessageDialog(rootPane,conex.rs.getInt("agenda_cod"));*/
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Erro ao Importar os Dados!\n"+ex.getMessage());
            
        }
       
    }//GEN-LAST:event_jTableAgendaMouseClicked

    private void jButtonAtenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAtenderActionPerformed
      daoagenda.Alterar(agen);
              preencherTabela("select *from agenda inner join pacientes on agenda_codpac = rg_paci inner join medicos on agenda_codmedico = cod_medico where agenda_data='"+dtHoje+"' and agenda_status='"+status+"' order by agenda_turno");
              dispose();
              
    }//GEN-LAST:event_jButtonAtenderActionPerformed

    private void jButtonRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRefreshActionPerformed
        daoagenda.Atualizar(agen);
        preencherTabela("select *from agenda inner join pacientes on agenda_codpac = rg_paci inner join medicos on agenda_codmedico = cod_medico where agenda_data='"+dtHoje+"' and agenda_status='"+status+"' order by agenda_turno");
    }//GEN-LAST:event_jButtonRefreshActionPerformed

    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormAgenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormAgenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormAgenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormAgenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormAgenda().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAtender;
    private javax.swing.JButton jButtonRefresh;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableAgenda;
    // End of variables declaration//GEN-END:variables
}
